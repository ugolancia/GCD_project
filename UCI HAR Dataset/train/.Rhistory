gss<- load(url("http://bit.ly/dasi_gss_data"))
class(gss)
load(url("http://bit.ly/dasi_gss_data"))
names(gss)
gss[,2]
tail(gss[,2])
gss2012<- subset(gss, gss[, 2] == "2012")
head(gss2012[, 6])
head(gss2012[, 1:6])
names(gss2012)
table(gss2012[, 39])
summary(gss2012[, 2])
summary(gss2012[, 3])
plot(gss2012[,3], gss2012[,39])
plot(gss2012[,39], gss2012[,3])
gss2012[1:40, c(2, 3, 39)]
sum(is.na(gss2012[, 39]))
plot(is.na(gss2012[,39]), gss2012[,3])
plot(gss2012[,39], gss2012[,3], na.rm = TRUE)
plot(is.na(gss2012[,39]))
nona<- is.na(gss2012[, 39])
table(is.na(gss2012[,39]))
plot
exp(0.88)
x<- 0.67+0.88+0.48
exp(x)
x-2.58
y<-x-2.58
exp(y)
x<- 0.88+0.48
exp(x)
exp(-2.58)
exp(0.67)
x<- 0.67+0.48
exp(x)
x<- -2.58+0.67+0.88+0.48
exp(x)
y<-exp(x)
y/(1+y)
x
127/464
54/72
235/272
63/133
650/3
217*2
200*2/3
70*2/3
200*2/3
50*2/3
1.5+6.7+0.7+3.7+2.8
1.5+6.7+0.7+3.7
6.7 + 1.5+1.7
6.7 + 1.5+1.7+2.8
41/569
38/569
library(swirl)
swirl()
exit()
quit()
library(swirl)
ls()
rm(list=ls())
swirl()
View(top_counts)
quantile(pack_sum, probs = 0.99)
?quantile
quantile(pack_sum, probs(counts) = 0.99)
quantile(pack_sum, counts(probs = 0.99)
)
quantile(pack_sum$counts, probs = 0.99)
swirl()
library(dplyr)
cran<- tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package<- group_by(cran, package)
by_package
summarize(by_package, mean(size))
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
top_counts<- filter(pack_sum, count >679)
top_counts
View(top_counts)
top_counts_sorted<- arrange(top_counts, desc(count))
View(top_counts_sorted)
quantile(packsum$unique, probs = 0.99)
quantile(pack_sum$unique, probs = 0.99)
top_unique<- filter(pack_sum, unique>465)
View(top_unique)
top_unique_sorted<- arrange(top_unique, desc(unique))
View(top_unique_sorted)
swirl()
submit()
submit()
submit()
View(result3)
x<- rnorm(10000, 10, 5)
head(x)
hist(x)
y<- sample(x, 100)
hist(y)
z<- sample(x, 100)
hist(z)
k<- sample(x, 1000)
hist(k)
pois<- rpois(4, 10000)
hist(pois)
pois<- rpois(4, 10000)
pois<- rpois(10000, 4)
hist(pois)
pois100<- sample(pois, 100)
hist(pois100)
pois1000<- sample(pois, 1000)
hist(pois1000)
boxplot(x)
boxplot(y)
boxplot(z)
boxplot(k)
boxplot(pois)
54.90+65.64
54.90+75.64
library(plyr)
library(dplyr)
irisyr<- tbl_df(iris)
irisyr
irisyr
population<- rnorm(100000, 140, 20)
hist(population)
mean(population)
sd(population)
hyp<- sample(population, 113)
hist(hyp)
mean(hyp)
hyp<- sample(population, 113)
mean(hyp)
hist(hyp)
hyp_1<- sample(population, 113)
hyp_2<- sample(population, 113)
hist(hyp_1)
hist(hyp_2)
boxplot(hyp_1)
boxplot(hyp_2)
mean(hyp_2)
mean(hyp_3)
mean(hyp_1)
t.test(hyp_1, hyp_2)
140+25.94+24+29.10
1/2*3/7*1/3*1/5
1/2*3/7*1/3*4/5
3000/50
50/3000
55*0.15
47*0.15
40*0.15
irisub<- lapply(iris[, 4], gsub("0.2", "wow"))
irisub<- lapply(iris[, 4], mean)
head(irisub)
irisub<- sapply(iris[, 4], mean)
sapply(iris[, 4], mean)
library(swirl)
swirl()
install_from_swirl("R Programming")
swirl()
head(flags)
dim(flags)
class(flags)
lapply(flags, class)
cls_list<- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
sapply(flags, class)
cls_vector<- sapply(flags, class)
cls_vect<- sapply(flags, class)
class(cls_vect)
y<- iris
head(y)
x<- gsub(1, "wow", y[, 4])
x<- y[, 4]
z<- gsub(0.2, "ow", x)
z<- gsub(0.2, "ow", x)
y<- cbind(y, z)
head(y)
y[, 4]<- NULL
head(y)
y<- cbind(y, z[2])
head(y)
library(dplyr)
?arrange
?mutate
mutate(mtcars, displ_l = disp / 61.0237)
transmute(mtcars, displ_l = disp / 61.0237)
new.df<- cbind(iris[, 1:3], z, iris[, 4:5])
head(new.d)
head(new.df)
?chartr
x<- 1:6
chartr("123456", "abcdef", x)
head(iris)
chartr("dt", "xy", iris$Sepal.Width)
#go to the directory where the data have been
#downloaded and unzipped
setwd("/Users/ugolancia/Desktop/UCI HAR Dataset")
#check
list.files()
#create a character vector of names for the 561 variables
names<- read.table("features.txt", stringsAsFactors = FALSE)
#extract a character vector from what is a data.frame
names<- names[, 2]
length(names)
#as a preliminary work try to read each file and study it
setwd("/Users/ugolancia/Desktop/UCI HAR Dataset/test")
list.files()
test_subjects<- read.table("subject_test.txt")
str(test_subjects)
test_labels<- read.table("y_test.txt")
str(test_labels)
test_set<- read.table("X_test.txt")
str(test_set)
#let's read the other directory train
setwd("/Users/ugolancia/Desktop/UCI HAR Dataset/train")
train_subjects<- read.table("subject_train.txt")
train_set<- read.table("X_train.txt")
train_labels<- read.table("y_train.txt")
#from this exploratory phase I can see that X_test and X_train
#have each 561 variables and the other file have only 1 variable
#so I first guess that the two Xs are the ones to be merged,
#but reading the forum I realized that also subjects and labels
#should have been incorporated
names(test_set)<- names
test_set[1:3, 1:5]
test_set <- cbind(test_subjects, test_labels, test_set)
test_set[1:3, 1:3]
names(test_set)[1:2]<- c("subject", "label")
dim(test_set)
setwd("/Users/ugolancia/Desktop/UCI HAR Dataset/train")
train_subjects<- read.table("subject_train.txt")
train_set<- read.table("X_train.txt")
train_labels<- read.table("y_train.txt")
names(train_set)<- names
train_set[1:3, 1:5]
train_set <- cbind(train_subjects, train_labels, train_set)
names(train_set)[1:2]<- c("subject", "label")
train_set[1:3, 1:3]
global<- rbind(test_set, train_set)
global_mean<- global[, grep("mean", names(global))]
#ok it worked...
global_std<- global[, grep("std", names(global))]
global_subject<- global[, grep("subject", names(global))]
global_label<- global[, grep("label", names(global))]
glob_mean_std<- cbind(global_subject, global_label, global_mean, global_std)
x<- glob_mean_std
label<- x$label
labeltr<- chartr("123456", "WALKINGWALKING_UPSTAIRSWALKING_DOWNSTAIRSSITTINGSTANDINGLAYING", label)
x<- glob_mean_std
label<- x$global_label
labeltr<- chartr("123456", "WALKINGWALKING_UPSTAIRSWALKING_DOWNSTAIRSSITTINGSTANDINGLAYING", label)
head(labeltr)
install.packages("qdap")
x<- c(1, 2, 3, 3, 3, 6, 6)
?mgsub
multigsub
?multigsub
?mgsub
install.packages("gsubfn")
library(gsubfn)
viewinfo(gsubfn)
help(gsubfn)
x<- glob_mean_std
label<- x$global_label
label<- gsub(1, "walking", label)
label<- gsub(2, "walking_upstairs", label)
head(label)
x<- glob_mean_std
label<- x$global_label
label<- gsub(1, "walking", label)
label<- gsub(2, "walking_upstairs", label)
label<- gsub(3, "walking_downstairs", label)
label<- gsub(4, "sitting", label)
label<- gsub(5, "standing", label)
label<- gsub(6, "laying", label)
